apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "ryr-api.fullname" . }}
  labels:
    app: {{ template "ryr-api.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "ryr-api.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: postgresql-init
          image: postgres:10.1-alpine
          command: ["sh", "-c", "echo -n Waiting for database...; until pg_isready; do  sleep 2; echo -n .; done; echo OK."]
          env:
            - name: PGHOST
              value: $(POSTGRESQL_SERVICE_HOST)
            - name: PGPORT
              value: $(POSTGRESQL_SERVICE_PORT)
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - api
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: {{ .Values.service.internalPort }}
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: {{ .Values.service.internalPort }}
          envFrom:
            - configMapRef:
                name: {{ template "ryr-api.fullname" . }}
            - secretRef:
                name: ryr-api-secrets
            - secretRef:
                name: postgresql
          {{- if .Values.env }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          {{- end }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - mountPath: "/usr/src/app"
              name: code
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: code
          persistentVolumeClaim:
            claimName: {{ template "ryr-api.fullname" . }}
      {{- end }}
